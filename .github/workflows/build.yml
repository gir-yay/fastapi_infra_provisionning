name : CI/CD pipline
on: 
  push:
    branches:
        - "main"
  
  workflow_dispatch: 
  
jobs:
  build:
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      DATABASE_URL: localhost
      DATABASE_PORT: 5432
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_ROOT_USER: ${{ secrets.DATABASE_ROOT_USER }}
      DATABASE_ROOT_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}
      TEST_DATABASE_NAME: ${{secrets.TEST_DATABASE_NAME}}
      DO_API_KEY: ${{secrets.DO_API_KEY}}
      VCENTER_HOST: ${{secrets.VCENTER_HOST}}
      VCENTER_USER: ${{secrets.VCENTER_USER}}
      VCENTER_PASSWORD: ${{secrets.VCENTER_PASSWORD}}
      TEMPLATE_NAME: ${{secrets.TEMPLATE_NAME}}
      DATASTORE_NAME: ${{secrets.DATASTORE_NAME}}
      DATACENTER_NAME: ${{secrets.DATACENTER_NAME}}
      ESXI_HOSTNAME: ${{secrets.ESXI_HOSTNAME}} 
      CUSTOMIZATION_SPEC_NAME: ${{secrets.CUSTOMIZATION_SPEC_NAME}}
      DO_USERNAME: ${{secrets.DO_USERNAME}}  
      USERNAME: ${{secrets.USERNAME}}  
      PASSWORD: ${{secrets.PASSWORD}}
      CLUSTER_NAME: ${{secrets.CLUSTER_NAME}}  
      SSH_KEY_PATH: ${{secrets.SSH_KEY_PATH}}
      SSH_KEY_ID: ${{secrets.SSH_KEY_ID}}
      IMAGE: ${{secrets.IMAGE}}
      REGION: ${{secrets.REGION}}
      SIZE_SLUG: ${{secrets.SIZE_SLUG}}
      VPC_UUID: ${{secrets.VPC_UUID}}
      DOMAIN_NAME: ${{secrets.DOMAIN_NAME}}
      LB_IP: ${{secrets.LB_IP}}
      REVERSE_PROXY_IP: ${{secrets.REVERSE_PROXY_IP}}

    services:
      postgres:
        image: postgres
        env:
          DATABASE_ROOT_USER: ${{ secrets.DATABASE_ROOT_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}
          POSTGRES_DB: ${{secrets.TEST_DATABASE_NAME}}
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    runs-on: [self-hosted, do, api]
    steps:
      - name: checking the repository
        uses: actions/checkout@v2
      
      - name: install python v3.10.16
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.16'
      
      - name: update pip
        run: |
          sudo apt-get install -y gcc libpq-dev python3.10-dev
          python3.10 -m pip install --upgrade pip

      
      - name: installing requirements
        run: |
          pip install wheel
          pip install -r requirements.txt.test
          

      - name: Testing the code
        run: |
          pip install pytest
          sleep 10
          pytest


      - name: login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ghizlanera
          password: ${{secrets.TOKEN}}
      
      - name: Set Version
        run: echo "VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV

      

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghizlanera/hybrid_env_fastapi:${{ env.VERSION }},ghizlanera/hybrid_env_fastapi:latest
    
      - name: Log out from Docker Hub
        run: docker logout

      
  deploy:
    runs-on: [self-hosted, do, api]
    needs: build
    steps:
      
      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          script: |
            docker compose down api
            docker compose pull api
            docker compose up -d 

